from fastapi import FastAPI
from apscheduler.schedulers.background import BackgroundScheduler
import time
from joint_certificate_login_withholdingtax_payment import main_function # joint_certificate_login_withholdingtax_payment.py 파일의 함수를 가져옵니다.

app = FastAPI()
scheduler = BackgroundScheduler()

result = None  # 전역 변수를 사용하여 결과를 저장합니다.

def scheduled_task():
    global result
    result = main_function()  # 함수 실행 결과를 result 변수에 저장합니다.
    print(f"Task executed at {time.strftime('%Y-%m-%d %H:%M:%S')}")

# 하루에 한 번 실행되도록 스케줄러 설정 (매일 자정 실행)
scheduler.add_job(scheduled_task, 'cron', hour=0, minute=0)
scheduler.start()

@app.get("/result")
def get_result():
    if result:
        return {"result": result}
    else:
        return {"result": "No data available"}

# 스케줄러가 종료되지 않도록 유지
@app.on_event("shutdown")
def shutdown_event():
    scheduler.shutdown()

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
